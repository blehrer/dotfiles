## Overrides
alias pbcopy=clip.exe

## Places
alias @wh='cd $WHOME'
alias wh='@wh'
alias @cdw='cd $WORKPLACE'
alias cdw='@cdw'
alias @w='cd $WORKPLACE'
alias w='@w'
alias @dfd='cd $DOTFILES_HOME'
alias dfd='@dfd'
alias @notes='cd $HOME/Documents/notes'
alias notes='@notes'
alias @scratch='cd $_HOME/scratch'
alias scratch='vim $_HOME/scratch/scratch-$(date "+%F-%T")'
alias @dl='cd $_HOME/Downloads'
alias @aws='cd $_HOME/.aws'
alias @http='cd $HTTP_ROOT'
alias @='@task'
alias @@='@ $(git branch --show-current) 2>/dev/null; yagdconf'
alias @@@='@ $(cat $TASK_HOME/.task-mru)'
alias @@@@='cd $NBCUOTS/$(cat $(git rev-parse --show-toplevel)/.yagconf)'
alias @d='@config'
alias @dq='@config sqe'
alias jj='cat $TASK_HOME/.task-mru | pbcopy'

[[ $(uname -a) = MINGW* ]] || [[ $(uname -a) = CYGWIN* ]] && {
    source $DOTFILES_HOME/windows_aliases
}

[ bat.exe ] && alias bat=bat.exe

source $DOTFILES_HOME/nbcu_aliases

function @logs() {
    declare -A exceptions
    exceptions[cds-ingest-mpx]="digsrv-cds-ingest-mpx"
    exceptions[cds-ingest-qa]="digsrv-cds-ingest-mpx-sqe"
    exceptions[cp-transfer-performance-tests]="cp-manatees-performance-tests"
    [[ $(pwd) =~ $NBCUOTS/* ]] && {
        cd $WORKPLACE/output/$(basename $(git rev-parse --show-toplevel))
        return
    }
    [[ $(pwd) =~ $TASK_HOME/* ]] && {
        cd $WORKPLACE/output/$(cat $(git rev-parse --show-toplevel)/.yagconf)
        return
    }
    echo "Not sure where the logs are?"
    return 1
}

function @repo() {
    declare -A exceptions
    exceptions[cds-ingest-mpx]="digsrv-cds-ingest-mpx"
    exceptions[cds-ingest-qa]="digsrv-cds-ingest-mpx-sqe"
    exceptions[cp-transfer-performance-tests]="cp-manatees-performance-tests"
    [ $1 ] && local suffix=$1
    [[ $(pwd) = $WORKPLACE/output/* ]] && {
        cd $NBCUOTS/$(basename $(pwd))/$suffix
        return
    }
    [[ $(pwd) = $TASK_HOME/* ]] && {
        cd $NBCUOTS/$(cat $(git rev-parse --show-toplevel)/.yagconf)/$suffix
        return
    }
    [[ $(pwd) = $NBCUOTS/*-config-repo/* ]] && {
        cd $NBCUOTS/$(basename $(pwd) | sed -e 's/-sqe$//g')/$suffix
        return
    }
    echo "Not sure where the repo is?"
    return 1
}

function @task() {
    [[ $(pwd) =~ $NBCUOTS/* ]] && [[ $1 ]] && updateMru=1
    source $DOTFILES_HOME/bin/.task ${@}
    [ $updateMru ] && {
        basename $(pwd) > $TASK_HOME/.task-mru
        pushd $DOTFILES_HOME
        git add homedir/.task-mru
        git commit -m "task-mru: update to $(cat $TASK_HOME/.task-mru)"
        popd
    }
}

function yagdconf() {
    echo $(basename ${$(dirs)[2]}) >> .yagconf |
        uniq |
        sed -e "s/.*config-repo//g" |
        tee .yagconf
    git add .yagconf
    git commit -m ".yagconf"
}

## Tools
function pushd() {
  if [ $# -eq 0 ]; then
    DIR="${HOME}"
  else
    DIR="$1"
  fi

  builtin pushd "${DIR}" > /dev/null
}

function pushd_builtin() {
  builtin pushd > /dev/null
}

function popd() {
  builtin popd > /dev/null
  dirs
}

# Cheatsheet!
function cht() {
  curl cht.sh/$1/$(echo ${@:2} | sed -e "s/\ /+/g")
}

alias brave='brave-browser $1 &> /dev/null &'
alias ag='ag --hidden'
alias c='clear'
alias cd='pushd'
alias code="$WHOME/AppData/Local/Programs/Microsoft\ VS\ Code/bin/code"
alias back='popd'
alias flip='pushd_builtin'
alias egrep='egrep -i --color=auto'
alias epoch='date +%s'
alias gamf='git commit -am f'
alias gb='git branch'
alias bcp='git branch-name | pbcopy'
alias gbackup='git push backup --force "refs/heads/*:refs/heads/*"'
alias gbls='git branch -vv'
alias gbu='echo "The upstream branch: $(git rev-parse --abbrev-ref --symbolic-full-name @{u})"' #print this branch's upstream branch
alias gc='git checkout'
alias gd='git diff'
alias gds='git diff --staged'
alias gh='se && gh'
alias glg='git log --graph --tags --decorate --oneline $(git rev-parse --abbrev-ref --symbolic-full-name HEAD @{u})' #show the git DAG as a graph
alias glga='git log --graph --decorate --oneline --all' #show the git DAG as a graph
alias gpom='git push origin HEAD:master'
alias grep='grep -i --color=auto'
alias gri='git rebase -i'
alias grim='git rebase -i origin/master'
alias gst='git status'
alias gsub='git submodule update --remote --merge'
alias ivm='vim'
alias ll='ls -alh'
alias idea="$INTELLIJ_HOME/idea.sh &> ~/.cache/JetBrains/IdeaIC2021.2/log/runtime/idea.$(date +%Y-%m-%d-%H%M%z.%s).log &"
alias intellij=idea
alias prepl='perl -d -e 1'
alias vd='vim ./.'
alias vmi='vim'
alias vj='vim $HOME/Documents/notes/Vim.md'
alias secretstring='jq ".SecretString|fromjson"'
alias yagd="source $DOTFILES_HOME/bin/.yagd -q"
alias yagdq="source $DOTFILES_HOME/bin/.yagd -s sqe -q"

## Edit config files
alias v='vim $DOTFILES_HOME/vimrc'
alias z='vim -O $HOME/.zshrc $DOTFILES_HOME/zshrc'
alias b='vim $DOTFILES_HOME/bashrc'
alias a='vim -O $DOTFILES_HOME/*aliases'
alias e='vim $DOTFILES_HOME/environment_variables'
alias oz='vim $CONFIG_DIR/zsh/oh-my-zsh.cfg'
alias iam='vim $AWS_SHARED_CREDENTIALS_FILE'
alias agig='vim $DOTFILES_HOME/ag/.agignore'
alias gig='vim $DOTFILES_HOME/git/gitignore_global'

## Re-source files
function src() {
    echo "Sourcing $1";
    source "$1";
}


alias sb='src ~/.bashrc'
alias sz='exec zsh'
alias soz='src $CONFIG_DIR/zsh/oh-my-zsh.cfg'
alias sa='src $DOTFILES_HOME/*aliases'
alias se='src $DOTFILES_HOME/environment_variables'

# Mac specific

[[ $OSTYPE = darwin* ]] && {
	alias git=$(brew --prefix)/bin/git
	alias bash-5.1='/usr/local/homebrew/bin/bash'
}
