#!/usr/bin/env bash
  env -i

function usage() {
	echo "
NAME:
@task - make/go-to task notes dir (~/Documents/jira/jira-prefix/jira-id)

SYNOPSIS:
@task [-p|--project=<jira-prefix>] jira-id

OPTIONS:
-h                     show this message 
-p=, --project=        jira project id. Defaults to svcs6
"
}

mkdir_and_cd_and_git_init() {
	[ $altProject ] && {
		local dir=~/Documents/jira/$altProject/$id
		local description=$altProject-$id
	} || {
		local dir=~/Documents/jira/$defaultProject/$id
		local description=$defaultProject-$id
	}
	[ -d $dir ] || mkdir -p $dir
	cd $dir
	[ -d .git ] || {
		git init
		echo $description >.git/description
	}
	[ -n $branchName ] && git checkout -b $branchName
}

function main() {
	local defaultProject=svcs6
	[ -z $1 ] && cd ~/Documents/jira/$defaultProject && return 0
	[ $1 =~ '[a-zA-Z0-9]+-[0-9]+-.+' ] && {
		local branchName=$1
		echo $branchName
		local altProject=$(echo "$branchName" | cut -d '-' -f 1 | tr '[:upper:]' '[:lower:]')
		local id=$(echo "$branchName" | cut -d '-' -f 2)
		echo "branchName: $branchName, altProject: $altProject, id: $id"
	} || {
		for i in "$@"; do
			case $i in
			-h | --help)
				usage
				return 0
				;;
			-p=* | --project=*)
				local altProject=$(echo "${i#*=}" | tr '[:upper:]' '[:lower:]')
				shift
				;;
			*) ;;
			esac
		done
	}
	[ ! -z $id ] || local id=$1
	mkdir_and_cd_and_git_init
	return
}

main $@
