#!/usr/bin/env bash

function usage() {
	echo "
NAME:
@_task - make/go-to task notes dir ($_HOME/Documents/jira/jira-prefix/jira-id)

SYNOPSIS:
@_task [-p|--project=<jira-prefix>] jira-id

OPTIONS:
-h                     show this message 
-p=, --project=        jira project id. Defaults to svcs6
"
}

mkdir_and_cd_and_git_init() {
    local dir=$TASK_HOME/$projectId/$id
    local description=https://jira.inbcu.com/browse/$projectId-$id
	[ -d $dir ] || mkdir -p $dir
	cd $dir
	[ -d .git ] || {
		git init
		echo $description >.git/description
	}
    [ -f .yagconf ] || {
        [ -n $branchName ] && {
            git checkout -b $branchName
            echo "./$id    $branchName" >> ../index.txt
        }
    }
    [ -f README.md ] || {
        echo "# $branchName\n\n$description" > README.md
        git add .
        git commit -am "README.md"
    }
#    [ -d .github ] || {
#        gh repo create \
#            https://github.inbcu.com/206672215/$projectId-$id \
#            --public \
#            --description $description && mkdir .github
#    }
}

function main() {
    echo here
	local branchName=$(git branch --show-current)
	echo $branchName
	[[ $branchName =~ [a-zA-Z0-9]+-[0-9]+-.+ ]] && {
		local projectId=$(echo "$branchName" | cut -d '-' -f 1 | tr '[:upper:]' '[:lower:]')
		local id=$(echo "$branchName" | cut -d '-' -f 2)
		echo "branchName: $branchName, projectId: $projectId, id: $id"
	} || {
		for i in "$@"; do
			case $i in
			-h | --help)
				usage
				return 0
				;;
			-p=* | --project=*)
				local projectId=$(echo "${i#*=}" | tr '[:upper:]' '[:lower:]')
				shift
				;;
			*) ;;
			esac
		done
	}
    [ ! -z $projectId ] || { echo ProjectId not set ; return 1 }
    [ ! -z $id ] || { echo JIRA Id not set ; return 1 }
	mkdir_and_cd_and_git_init
	return
}

main $@
