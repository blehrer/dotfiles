#!/bin/env bash
## Places
alias @cpc='cd $NBCUOTS/cp-config-repo'
alias cpc='cd $NBCUOTS/cp-config-repo'
alias @dg='cd $NBCUOTS/digsrv-config-repo'
alias @ots='cd $NBCUOTS/cp-transfer-upload'
alias @sto='cd $NBCUOTS/cp-transfer-s3toonprem'
alias @toon='cd $NBCUOTS/cp-transfer-s3toonprem'
alias @testcore='cd $NBCUOTS/digsrv-test-core'
alias @ds='cd $NBCUOTS/cp-transfer-upload-s3'
alias @s3s3='cd $NBCUOTS/cp-transfer-upload-s3'
alias @s3='cd $NBCUOTS/cp-transfer-upload-s3'
alias @mcp='cd $NBCUOTS/digsrv-mcp-extractor'
alias @diva='cd $NBCUOTS/cp-transfer-diva-restore'
alias @tools='cd $NBCUOTS/cp-tools'
alias @mpx='cd $NBCUOTS/cp-mpx-ingest'
alias @delivery='cd $NBCUOTS/cp-delivery'
alias @perf='cd $NBCUOTS/cp-manatees-performance-tests'
alias @cs3='cd $NBCUOTS/cp-transfer-cloudian'

function @config {
    declare -A exceptions
    exceptions[digsrv-cds-ingest-mpx]="cds-ingest-mpx"
    exceptions[digsrv-cds-ingest-mpx-sqe]="cds-ingest-qa"
    exceptions[cp-manatees-performance-tests]="cp-transfer-performance-tests"
    [ $1 ] && {
        [[ $1 = -* ]] && local suffix=$1 || local suffix="-$1"
    }
    [[ $(pwd) = $WORKPLACE/output/* ]] && {
        cd $NBCUOTS/*-config-repo/$(basename $(pwd))$suffix
        return
    }
    [[ $(pwd) = $NBCUOTS/*-config-repo/*-sqe ]] && {
        cd ../$(basename $(pwd) | sed -e 's/-sqe//g')$suffix
        return
    }
    [[ $(pwd) = $NBCUOTS/*-config-repo/* ]] && {
        cd ../$(basename $(pwd))$suffix
        return
    }
    [[ $(pwd) = $NBCUOTS/* ]] && {
        local repoName=$(basename $(git rev-parse --show-toplevel))
        local configProjectName=${${exceptions[$repoName]}:-$repoName}
        cd $NBCUOTS/*-config-repo/$configProjectName$suffix
        return
    }
    [[ $(pwd) = $TASK_HOME/* ]] && {
        local repoName=$(cat $(git rev-parse --show-toplevel)/.yagconf)
        local configProjectName=${${exceptions[$repoName]}:-$repoName}
        cd $NBCUOTS/*-config-repo/$configProjectName$suffix
        return
    }
    echo "Not sure where the config is?"
    return 1
}

function jbcp() {
    @@
    local link="https://jira.inbcu.com/browse/$(basename $(dirname $(pwd)))-$(basename $(pwd))"
    echo $link | pbcopy
    echo "JIRA link copied to clipboard ($link)"

    popd
}

function duplicateSamlProfile() {
  local profile=${1:-default}
  local details=`tail -n 7 ~/.aws/credentials`
  cat >> ~/.aws/credentials << EOF

[$profile]
$details
EOF
}

alias iamEksNonprod="cyberpeacock_login --user $SSO --profile eksNonprod --arn $IAM_EKS_NONPROD --duration $(expr 60 \* 60 \* 1)"
alias iamDevNonprod="cyberpeacock_login --user $SSO --profile preprod --arn $IAM_DEVTEAM_NONPROD --duration $(expr 60 \* 60 \* 4) && duplicateSamlProfile"

function utilspod() {
  kubectl attach bl-utils -c bl-utils -i -t ||
  kubectl run --rm bl-utils -it --image blehrer/utils bash ||
  cyberpeacock_login \
    --profile saml \
    --user `whoami` \
    --arn $IAM_EKS_NONPROD &&
  aws eks update-kubeconfig --name cloudpipeline-eks-nonprod-1 --profile saml &&
  kubectl attach bl-utils -c bl-utils -i -t ||
  [ $? = 1 ] &&
  kubectl run --rm bl-utils -it --image blehrer/utils bash
}
