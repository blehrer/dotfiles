#!/bin/env bash
## Places
alias @cdw='cd "${OTS}"'
alias cdw='@cdw'
alias vdw='@cdw'
alias @oas='cd "${ONAIR}"'
alias @xit='cd "${OTS}"/xit.git; setJavaHome "${OPENJDK_8_HOME}"'
alias xit='@xit'
alias x='@xit'
alias @x='@xit'
alias @X='@xit'
alias xxx='cd "${OTS}"/xit.git/runtime; setJavaHome "${OPENJDK_8_HOME}" ; ranger'
alias xx='cd "${OTS}"/xit.git/.secrets; setJavaHome "${OPENJDK_8_HOME}"'
alias xf='cd "${OTS}"/xit.git/src/main/frontend; setJavaHome "${OPENJDK_8_HOME}"'
alias @xf='cd "${OTS}"/xit.git/src/main/frontend; setJavaHome "${OPENJDK_8_HOME}"'
alias @xh='cd "${XH}"; setJavaHome "${OPENJDK_8_HOME}"'
alias @ntsi='cd "${OTS}"/NTSI; setJavaHome "${OPENJDK_8_HOME}"'
alias pipeline='cd "${FORKS}"/pipeline-library; setJavaHome "${OPENJDK_8_HOME}"'
alias pipline=pipeline
alias gdsl='cd "${FORKS}"/jenkins-job-dsl; setJavaHome "${OPENJDK_8_HOME}"'
#alias @tll='cd "${OTS}"/translator-linear.git'
#alias @fwd='cd "${OTS}"/translator-linear.git/fwd'
alias @ui='cd "${OTS}"/tll-ui-integration-tests; setJavaHome "${CORRETTO_11_HOME}"'
alias ui='@ui'
alias gql='cd "${OTS}"/tll-aqa-graphql-common; setJavaHome "${CORRETTO_17_HOME}"'
alias recon='cd "${OTS}"/tll-recon-api/tests; nvm use 18; sdk use java 17.0.12-amzn' #; setJavaHome "${CORRETTO_11_HOME}"
alias @ots='cd "${NBCUOTS}"'
alias @cpc='cd "${NBCUOTS}"/cp-config-repo'
alias cpc='cd "${NBCUOTS}"/cp-config-repo'
alias @dg='cd "${NBCUOTS}"/digsrv-config-repo'
alias @e2e='cd "${NBCUOTS}"/cp-fulfillment-e2e'
alias @ots='cd "${NBCUOTS}"/cp-transfer-upload'
alias @sto='cd "${NBCUOTS}"/cp-transfer-s3toonprem'
alias @toon='cd "${NBCUOTS}"/cp-transfer-s3toonprem'
alias @testcore='cd "${NBCUOTS}"/digsrv-test-core'
alias @ds='cd "${NBCUOTS}"/cp-transfer-upload-s3'
alias @s3s3='cd "${NBCUOTS}"/cp-transfer-upload-s3'
alias @s3='cd "${NBCUOTS}"/cp-transfer-upload-s3'
alias @mcp='cd "${NBCUOTS}"/digsrv-mcp-extractor'
alias @diva='cd "${NBCUOTS}"/cp-transfer-diva-restore'
alias @tools='cd "${NBCUOTS}"/cp-tools'
alias @mpx='cd "${NBCUOTS}"/cp-mpx-ingest'
alias @delivery='cd "${NBCUOTS}"/cp-delivery'
alias @perf='cd "${OTS}"/tll-performance; setJavaHome "${CORRETTO_11_HOME}"'
alias @cs3='cd "${NBCUOTS}"/cp-transfer-cloudian'
alias @cloudian='cd "${NBCUOTS}"/cp-transfer-cloudian'
alias @data='cd "${ONAIR}"/data'
alias @oput='@oput1'
alias @jira='cd "${TASK_HOME}"'

function @tll {
  if [ $1 ]; then
    mkdir $TASK_HOME/tll/$1 2>/dev/null
    cd $TASK_HOME/tll/$1
  else
    cd $TASK_HOME/tll
  fi
}
function @oput1 {
  if [ $1 ]; then
    mkdir $TASK_HOME/oput1/$1 2>/dev/null
    cd $TASK_HOME/oput1/$1
  else
    cd $TASK_HOME/oput1
  fi
}
function @config {
    declare -A exceptions
    exceptions[digsrv-cds-ingest-mpx]="cds-ingest-mpx"
    exceptions[digsrv-cds-ingest-mpx-sqe]="cds-ingest-qa"
    exceptions[cp-manatees-performance-tests]="cp-transfer-performance-tests"
    [ $1 ] && {
        [[ $1 = -* ]] && local suffix=$1 || local suffix="-$1"
    }
    [[ $(pwd) = $WORKPLACE/output/* ]] && {
        cd $NBCUOTS/*-config-repo/$(basename $(pwd))$suffix
        return
    }
    [[ $(pwd) = $NBCUOTS/*-config-repo/*-sqe ]] && {
        cd ../$(basename $(pwd) | sed -e 's/-sqe//g')$suffix
        return
    }
    [[ $(pwd) = $NBCUOTS/*-config-repo/* ]] && {
        cd ../$(basename $(pwd))$suffix
        return
    }
    [[ $(pwd) = $NBCUOTS/* ]] && {
        local repoName=$(basename $(git rev-parse --show-toplevel))
        local configProjectName=${${exceptions[$repoName]}:-$repoName}
        cd $NBCUOTS/*-config-repo/$configProjectName$suffix
        return
    }
    [[ $(pwd) = $TASK_HOME/* ]] && {
        local repoName=$(cat $(git rev-parse --show-toplevel)/.yagconf)
        local configProjectName=${${exceptions[$repoName]}:-$repoName}
        cd $NBCUOTS/*-config-repo/$configProjectName$suffix
        return
    }
    echo "Not sure where the config is?"
    return 1
}

function jbcp() {
    @@
    local link="https://jira.inbcu.com/browse/$(basename $(dirname $(pwd)))-$(basename $(pwd))"
    echo $link | pbcopy
    echo "JIRA link copied to clipboard ($link)"

    popd
}

function cpProfile() {
  local from=${1:-default}
  local to=${2:-default}
  declare -A attrs
  attrs=(
    [AWS_DEFAULT_OUTPUT]="output"
    [AWS_DEFAULT_REGION]="region"
    [AWS_ACCESS_KEY_ID]="aws_access_key_id"
    [AWS_SESSION_TOKEN]="aws_session_token"
    [AWS_SECURITY_TOKEN]="aws_security_token"
    [AWS_SECRET_ACCESS_KEY]="aws_secret_access_key"
  )
  for envVar in ${(k)attrs}; do
    attr="${attrs[$envVar]}"
    value=$(aws configure --profile $from get $attr)
    [[ $value ]] && aws configure --profile $to set $attr $value && $(echo export $envVar=$value)
  done
}

function setDefaultIam(){
  local profile=${1:-default}
  cyberpeacock_login --user ${SSO:?} --profile ${profile} --arn ${2:?} --duration ${3}
}

alias iamFwd="setDefaultIam fwd arn:aws:iam::615757282153:role/FWDTeam 3600"
alias iamEksNonprod="cyberpeacock_login --user $SSO --profile eksNonprod --arn $IAM_EKS_NONPROD --duration $(expr 60 \* 60 \* 1 - 1) && cpProfile eksNonprod saml && aws eks update-kubeconfig --name cloudpipeline-eks-nonprod-1 --profile eksNonprod"
alias iamDevNonprod="cyberpeacock_login --user $SSO --profile preprod --arn $IAM_DEVTEAM_NONPROD --duration $(expr 60 \* 60 \* 8 - 1) && cpProfile preprod default"
alias iamFwdNonprod="cyberpeacock_login --user $SSO --profile fwd --arn arn:aws:iam::615757282153:role/FWDTeam --duration 3600 && cpProfile fwd saml && aws eks update-kubeconfig --name fwd-eks-us-east-1 --profile fwd"
alias iamFwdProd="cyberpeacock_login --user $SSO --profile fwd-prod --arn arn:aws:iam::451289765098:role/FWDTeam --duration 3600 && cpProfile fwd-prod saml && aws eks update-kubeconfig --name fwd-eks-us-east-1 --profile fwd-prod"

function defaultIam {
  cyberpeacock_login --user $SSO --profile $1 --arn $2 --duration $3 && cpProfile $1 saml
  [[ $4 ]] && aws eks update-kubeconfig --name fwd-eks-us-east-1 --profile fwd
}

function utilspod() {
  kubectl attach bl-utils -c bl-utils -i -t ||
  kubectl run --rm bl-utils -it --image blehrer/utils bash ||
  cyberpeacock_login \
    --profile saml \
    --user `whoami` \
    --arn $IAM_EKS_NONPROD &&
  aws eks update-kubeconfig --name cloudpipeline-eks-nonprod-1 --profile saml &&
  kubectl attach bl-utils -c bl-utils -i -t ||
  [ $? = 1 ] &&
  kubectl run --rm bl-utils -it --image blehrer/utils bash
}

function wd() {
  pgrep -f selenium | xargs kill
  $(brew --prefix)/opt/selenium-server/bin/selenium-server hub 2>&1 >> $OTS/tll-ui-integration-tests/runtime/logs/selenium-hub.log &
  $(brew --prefix)/opt/selenium-server/bin/selenium-server node 2>&1 >> $OTS/tll-ui-integration-tests/runtime/logs/selenium-node.log &
}

function setJavaHome {
  unset JAVA_HOME
  export JAVA_HOME=$1
  env | grep JAVA_HOME
}

function reconbl {
  recon ; ../project ; gw clean assemble && sls deploy --param 'environment=bl' --stage bl --aws-profile fwd
  [ $? ] || iamFwd
}
