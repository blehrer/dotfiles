#!/bin/env bash
## Places
alias @cdw='cd $OTS'
alias cdw='@cdw'
alias @oas='cd $ONAIR'
alias @xit='cd $OTS/xit.git'
alias xit='@xit'
alias x='@xit'
alias @x='cd $OTS/xit.git'
alias @X='cd $OTS/xit.git'
alias xf='cd $OTS/xit.git/src/main/frontend'
alias @xf='cd $OTS/xit.git/src/main/frontend'
alias @xh='cd $XH'
#alias @tll='cd $OTS/translator-linear.git'
#alias @fwd='cd $OTS/translator-linear.git/fwd'
alias @ui='cd $OTS/tll-ui-integration-tests'
alias ui='@ui'
alias @ots='cd $NBCUOTS'
alias @cpc='cd $NBCUOTS/cp-config-repo'
alias cpc='cd $NBCUOTS/cp-config-repo'
alias @dg='cd $NBCUOTS/digsrv-config-repo'
alias @e2e='cd $NBCUOTS/cp-fulfillment-e2e'
alias @ots='cd $NBCUOTS/cp-transfer-upload'
alias @sto='cd $NBCUOTS/cp-transfer-s3toonprem'
alias @toon='cd $NBCUOTS/cp-transfer-s3toonprem'
alias @testcore='cd $NBCUOTS/digsrv-test-core'
alias @ds='cd $NBCUOTS/cp-transfer-upload-s3'
alias @s3s3='cd $NBCUOTS/cp-transfer-upload-s3'
alias @s3='cd $NBCUOTS/cp-transfer-upload-s3'
alias @mcp='cd $NBCUOTS/digsrv-mcp-extractor'
alias @diva='cd $NBCUOTS/cp-transfer-diva-restore'
alias @tools='cd $NBCUOTS/cp-tools'
alias @mpx='cd $NBCUOTS/cp-mpx-ingest'
alias @delivery='cd $NBCUOTS/cp-delivery'
alias @perf='cd $NBCUOTS/cp-manatees-performance-tests'
alias @cs3='cd $NBCUOTS/cp-transfer-cloudian'
alias @cloudian='cd $NBCUOTS/cp-transfer-cloudian'
alias @data='cd $ONAIR/data'
alias @tll='cd $TASK_HOME/tll'
alias @oput1='cd $TASK_HOME/oput1'
alias @oput='cd $TASK_HOME/oput1'

function @config {
    declare -A exceptions
    exceptions[digsrv-cds-ingest-mpx]="cds-ingest-mpx"
    exceptions[digsrv-cds-ingest-mpx-sqe]="cds-ingest-qa"
    exceptions[cp-manatees-performance-tests]="cp-transfer-performance-tests"
    [ $1 ] && {
        [[ $1 = -* ]] && local suffix=$1 || local suffix="-$1"
    }
    [[ $(pwd) = $WORKPLACE/output/* ]] && {
        cd $NBCUOTS/*-config-repo/$(basename $(pwd))$suffix
        return
    }
    [[ $(pwd) = $NBCUOTS/*-config-repo/*-sqe ]] && {
        cd ../$(basename $(pwd) | sed -e 's/-sqe//g')$suffix
        return
    }
    [[ $(pwd) = $NBCUOTS/*-config-repo/* ]] && {
        cd ../$(basename $(pwd))$suffix
        return
    }
    [[ $(pwd) = $NBCUOTS/* ]] && {
        local repoName=$(basename $(git rev-parse --show-toplevel))
        local configProjectName=${${exceptions[$repoName]}:-$repoName}
        cd $NBCUOTS/*-config-repo/$configProjectName$suffix
        return
    }
    [[ $(pwd) = $TASK_HOME/* ]] && {
        local repoName=$(cat $(git rev-parse --show-toplevel)/.yagconf)
        local configProjectName=${${exceptions[$repoName]}:-$repoName}
        cd $NBCUOTS/*-config-repo/$configProjectName$suffix
        return
    }
    echo "Not sure where the config is?"
    return 1
}

function jbcp() {
    @@
    local link="https://jira.inbcu.com/browse/$(basename $(dirname $(pwd)))-$(basename $(pwd))"
    echo $link | pbcopy
    echo "JIRA link copied to clipboard ($link)"

    popd
}

function cpProfile() {
  local from=${1:-default}
  local to=${2:-default}
  local attrs=(output region aws_access_key_id aws_session_token aws_security_token aws_secret_access_key)
  for attr in $attrs; do [ $? = 0 ] && aws configure --profile $to set $attr `aws configure --profile $from get $attr` || echo Could not set $attr; done;
}

function setDefaultIam(){
  local profile=${1:-default}
  cyberpeacock_login --user ${SSO:?} --profile ${profile} --arn ${2:?} ${3:+ --duration $3} &&
}

alias iamFwd="setDefaultIam default arn:aws:iam::615757282153:role/FWDTeam 3600"
alias iamEksNonprod="cyberpeacock_login --user $SSO --profile eksNonprod --arn $IAM_EKS_NONPROD --duration $(expr 60 \* 60 \* 1 - 1) && cpProfile eksNonprod saml && aws eks update-kubeconfig --name cloudpipeline-eks-nonprod-1 --profile eksNonprod"
alias iamDevNonprod="cyberpeacock_login --user $SSO --profile preprod --arn $IAM_DEVTEAM_NONPROD --duration $(expr 60 \* 60 \* 8 - 1) && cpProfile preprod default"
alias iamFwdNonprod="cyberpeacock_login --user $SSO --profile fwd --arn arn:aws:iam::615757282153:role/FWDTeam --duration 3600 && cpProfile fwd saml && aws eks update-kubeconfig --name fwd-eks-us-east-1 --profile fwd"
alias iamFwdProd="cyberpeacock_login --user $SSO --profile fwd-prod --arn arn:aws:iam::451289765098:role/FWDTeam --duration 3600 && cpProfile fwd-prod saml && aws eks update-kubeconfig --name fwd-eks-us-east-1 --profile fwd-prod"


function utilspod() {
  kubectl attach bl-utils -c bl-utils -i -t ||
  kubectl run --rm bl-utils -it --image blehrer/utils bash ||
  cyberpeacock_login \
    --profile saml \
    --user `whoami` \
    --arn $IAM_EKS_NONPROD &&
  aws eks update-kubeconfig --name cloudpipeline-eks-nonprod-1 --profile saml &&
  kubectl attach bl-utils -c bl-utils -i -t ||
  [ $? = 1 ] &&
  kubectl run --rm bl-utils -it --image blehrer/utils bash
}

